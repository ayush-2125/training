<?php

/**
 * @file
 * Drupal Cron Hook for creating a cron task
 */
use Drupal\user\Entity\User;

$ids = \Drupal::entityQuery('user')
    ->condition('status', 1)
    ->condition('roles', 'manager')
    ->execute();
$users = User::loadMultiple($ids);

foreach($users as $user){
    $mail =  $user->get('mail')->getString();
}

 function customcron_cron() {

  // Long-running operation example, leveraging a queue:
  // Queue news feeds for updates once their refresh interval has elapsed.
  $queue = \Drupal::queue('aggregator_feeds');
  $mail = \Drupal::entityManager()
    ->getStorage('aggregator_feed')
    ->getFeedIdsToRefresh();
  foreach (Feed::loadMultiple($ids) as $feed) {
    if ($queue
      ->createItem($feed)) {

      // Add timestamp to avoid queueing item more than once.
      $feed
        ->setQueuedTime(REQUEST_TIME);
      $feed
        ->save();
    }
  }
  $ids = \Drupal::entityQuery('aggregator_feed')
    ->condition('queued', REQUEST_TIME - 3600 * 6, '<')
    ->execute();
  if ($ids) {
    $feeds = Feed::loadMultiple($ids);
    foreach ($feeds as $feed) {
      $feed
        ->setQueuedTime(0);
      $feed
        ->save();
    }
  }
}
